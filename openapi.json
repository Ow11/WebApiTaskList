{
    "openapi": "3.0.1",
    "info": {
        "title": "asp_rest",
        "version": "v1"
    },
    "paths": {
        "/Lists": {
            "get": {
                "summary": "List of all lists created yet",
                "tags": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/List"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    }
                }
            },
            "post": {
                "summary": "Create a list",
                "tags": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/List"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/List"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/Lists/{ListId}": {
            "get": {
                "summary": "List itself",
                "tags": [],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListDetailed"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    }
                }
            },
            "put": {
                "summary": "Update list detail",
                "tags": [],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/List"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/List"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete list",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ListId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/Todo": {
            "post": {
                "summary": "Create a todo",
                "tags": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        },
        "/Todo/{TodoId}": {
            "get": {
                "summary": "Todo itself",
                "tags": [],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TodoId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    }
                }
            },
            "put": {
                "summary": "Update todo detail",
                "tags": [],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TodoId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Todo"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            },
            "delete": {
                "summary": "Delete todo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/TodoId"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "$ref": "#/components/responses/ApiKeyInvalidError"
                    },
                    "403": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "ListId": {
                "name": "ListId",
                "in": "path",
                "required": true,
                "description": "Id of the list to retrieve",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "TodoId": {
                "name": "TodoId",
                "in": "path",
                "required": true,
                "description": "Id of the todo to retrieve",
                "schema": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "responses": {
            "ApiKeyInvalidError": {
                "description": "API key is missing or invalid",
                "content": {
                    "application/json": {
                        "example": {
                            "code": "API_KEY_INVALID",
                            "message": "API key is missing or invalid"
                        }
                    }
                }
            },
            "UnauthorizedError": {
                "description": "Access token is missing or invalid",
                "content": {
                    "application/json": {
                        "example": {
                            "code": "UNAUTHORIZED",
                            "message": "Access token is missing or invalid"
                        }
                    }
                }
            }
        },
        "schemas": {
            "Todo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "format": "markdown"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "List": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ListDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "todos": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Todo"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        }
    }
}